---
version: '3.7'
services:
  ## MySQL Docker Compose Config
  mysql-user:
    container_name: mysql-user
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: userDb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - ./mysql-user:/var/lib/mysql
    ports:
      - "3306:3306"
    restart: always

  mysql-comment:
    container_name: mysql-comment
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: commentDb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - ./mysql-comment:/var/lib/mysql
    ports:
      - "3307:3306"
    restart: always

  ## Mongo Docker Compose Config
  mongo:
    container_name: mongo
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root_user
      MONGO_INITDB_ROOT_PASSWORD: root_password
      MONGO_INITDB_DATABASE: postDb
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./mongo-data:/data/db

  ## Keycloak Config with Mysql database
  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:latest
    volumes:
      - ./mysql_keycloak_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:23.0.0
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    depends_on:
      - keycloak-mysql

  ## Zipkin
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  ## Eureka Server
  discovery-server:
    image: discovery-server-img
    build: ./discovery-service
    container_name: discovery-server
    ports:
      - "8761:8761"
    depends_on:
      - zipkin

  api-gateway:
    image: api-gateway-img
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "9000:9000"
    expose:
      - "9000"
    environment:

#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
      - EUREKA_SERVER=http://discovery-server:8761/eureka/
    depends_on:
      - zipkin
      - discovery-server
      - keycloak

  ## Post-Service Docker Compose Config
  post-service:
    container_name: post-service
    build: ./post-service
    image: post-service-img
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://root_user:root_password@mongo:27017/postDb
    depends_on:
      - mongo
      - discovery-server
      - api-gateway

  ## User-Service Docker Compose Config
  user-service:
    container_name: user-service
    build: ./user-service
    image: user-service-img
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-user:3306/userDb
      - EUREKA_SERVER=http://discovery-server:8761/eureka/
    depends_on:
      - mysql-user
      - zipkin
      - discovery-server
      - api-gateway

  ## Comment-Service Docker Compose Config
  comment-service:
    container_name: comment-service
    build: ./comment-service
    image: comment-service-img
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-comment:3306/commentDb
      - EUREKA_SERVER=http://discovery-server:8761/eureka/
    depends_on:
      - mysql-comment
      - discovery-server
      - api-gateway
      - zipkin

    ## Friendship-Service Docker Compose Config
  friendship-service:
    container_name: friendship-service
    build: ./friendship-service
    image: friendship-service-img
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-comment:3306/commentDb
      - EUREKA_SERVER=http://discovery-server:8761/eureka/
    depends_on:
      - discovery-server
      - api-gateway
      - zipkin